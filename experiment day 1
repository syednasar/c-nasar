1)ARITHMETIC OPERATIONS

#include <stdio.h>

int main()
{
    int num1, num2;
    int sum, sub, mult, mod;
    float div;

    
    printf("Enter any two numbers: ");
    scanf("%d%d", &num1, &num2);

    sum = num1 + num2;
    sub = num1 - num2;
    mult = num1 * num2;
    div = (float)num1 / num2;
    mod = num1 % num2;

  
    printf("SUM = %d\n", sum);
    printf("DIFFERENCE = %d\n", sub);
    printf("PRODUCT = %d\n", mult);
    printf("QUOTIENT = %f\n", div);
    printf("MODULUS = %d", mod);

    return 0; 
}
 

2)REVERSE NUMBERS

#include <stdio.h>

int main(){

    int Num, rev_Num = 0, remainder;

    printf("Enter the number to reverse: ");

    scanf("%d", &Num);    

    while (Num != 0){

        remainder = Num % 10;

        rev_Num = rev_Num * 10 + remainder;

        Num = Num/10;

    }    

    printf("The reversed number is: %d", rev_Num);

    return 0;
    }

 

3)FACTORIAL:

#include <stdio.h>
int main(){
  int i,f=1,num;

  printf("Input the number : ");
  scanf("%d",&num);

  for(i=1;i<=num;i++)
      f=f*i;

  printf("The Factorial of %d is: %d\n",num,f);
}

 
4)PERFECT NUMBER:

#include<stdio.h>  
#include<conio.h>  
void main()  
{  
 
int num, rem, sum = 0, i;  
printf("Enter a number\n");  
scanf("%d", &num);      
for(i = 1; i < num; i++)  
                     {  
                              rem = num % i;  
                             if (rem == 0)  
                                        {  
                                               sum = sum + i;  
                                         }  
                        }  
if (sum == num)  
                      printf(" %d is a Perfect Number");  
           else  
                      printf("\n %d is not a Perfect Number");  
getch();  
}



 
5)ELIGIBLE FOR VOTE:
#include<stdio.h>
int main()
{
	int age;
	printf("enter age:");
	scanf("%d",&age);
	if(age>=18){
	printf("eligible to vote");
}
	else{
	printf("%d not eligigble ");
	printf("%d years to wait ",18-age);	
}
}



 
6)EVEN OR ODD NUMBER:

#include <stdio.h>
int main() {
    int num;
    printf("Enter an integer: ");
    scanf("%d", &num);

    
    if(num % 2 == 0)
        printf("%d is even.", num);
    else
        printf("%d is odd.", num);
    
    return 0;
}




 
7)P TO Q  STATEMENT:

#include<stdio.h>
int main()
{
	int p,q,r,i,c=0;
	printf("Enter P :");
	scanf("%d",&p);
	printf("Enter Q :");
	scanf("%d",&q);
	printf("Enter R :");
	scanf("%d",&r);
	for(i=p;i<=q;i++)
	{
		if(c!=r)
		{
			printf("%d  ",i);
			c++;
		}
		else
		{
			c++;
			continue;
		}
	}
	return 0;
}






 

8)MULTIPLICATION TABLE:

#include <stdio.h>
int main() {
  int n, i, range;
  printf("Enter m: ");
  scanf("%d", &n);
  do {
    printf("Enter n: ");
    scanf("%d", &range);
  } while (range <= 0);

  for (i = 1; i <= range; ++i) {
    printf("%d * %d = %d \n", n, i, n * i);
  }

  return 0;
}





 
9)LEAP YEAR:

#include <stdio.h>
int main() {
   int year;
   printf("Enter a year: ");
   scanf("%d", &year);
   if (year % 400 == 0) {
      printf("%d is a leap year.", year);
   }
   else if (year % 100 == 0) {
      printf("%d is not a leap year.", year);
   }
   
   else if (year % 4 == 0) {
      printf("%d is a leap year.", year);
   }
   
   else {
      printf("%d is not a leap year.", year);
   }

   return 0;
}



 
10)SUM OF DIGITS:
#include <stdio.h>
int main()
{
   int n, t, sum = 0, remainder;
   printf("Enter an integer\n");
   scanf("%d", &n);
   t = n;
   while (t != 0)
   {
      remainder = t % 10;
      sum       = sum + remainder;
      t         = t / 10;
   }

   printf("Sum of digits of %d = %d\n", n, sum);

   return 0;
}








 
11)PERMUTATION:
#include <stdio.h> 
#include <string.h> 
void swap(char *x, char *y) 
{ 
    char temp; 
    temp = *x; 
    *x = *y; 
    *y = temp; 
} 

void permute(char *a, int l, int r) 
{ 
    int i; 
    if (l == r) 
        printf("%s\n", a); 
    else
    { 
        for (i = l; i <= r; i++) 
        { 
            swap((a + l), (a + i)); 
            permute(a, l + 1, r); 
  
            
            swap((a + l), (a + i)); 
        } 
    } 
} 
  

int main() 
{ 
    char str[] = "ABC"; 
    int n = strlen(str); 
    permute(str, 0, n-1); 
    return 0; 
}








 
12)SIMPLE INTEREST:
#include <stdio.h>
int main()
{ 
 float principle, rate, sinterest;
 int time;
 printf("Enter Principle Amount, Rate %% per Annum and Time\n");
 scanf ("%f %f %d", &principle, &rate, &time);
 sinterest = (principle * rate * time)/ 100.0;
 printf ("Principle Amount = %5.2f\n", principle);
 printf ("Rate %% per Annum   = %5.2f%\n", rate);
 printf ("Time   = %d years\n", time);
 printf ("Simple Interest  = %5.2f\n", sinterest);
}



 
13)STRONG NUMBER:
#include <stdio.h>
int main()
{
    int i, originalNum, num, lastDigit, sum;
    long fact; 
    printf("Enter any number to check Strong number: ");
    scanf("%d", &num);
    originalNum = num;
    sum = 0;
    while(num > 0)
    {
        lastDigit = num % 10;   
        fact = 1;
        for(i=1; i<=lastDigit; i++)
        {
            fact = fact * i;
        } sum = sum + fact;
        num = num / 10;
    }
if(sum == originalNum)
    {
        printf("%d is STRONG NUMBER", originalNum);
    }
    else
    {
        printf("%d is NOT STRONG NUMBER", originalNum);
    }

    return 0;
}



 


14)NTH PRIME NUMBER:
#include <stdio.h>
#include<math.h>
int
main ()
{
  int rangenumber, c = 0, num = 2, i, letest = 0;
  printf ("Enter Nth Number\n");
  scanf ("%d", &rangenumber);

  while (c != rangenumber)
    {
      int count = 0;
      for (i = 2; i <= sqrt (num); i++)
 {
   if (num % i == 0)
     {
       count++;
       break;
     }
 }
      if (count == 0)
 {
   c++;
   letest = num;
 }
      num = num + 1;
    }
  printf ("%dth prime number is %d ",rangenumber,letest);
  return 0;
}



 

15)PYTHAGEROAN:

#include<stdio.h>
main(){
    int initial,final,a,b,c,m,n;
    printf("Enter the range in which you want to search for Pythagorean Triplets:\nInitial: ");
    scanf("%d",&initial);
    printf("\nFinal: ");
    scanf("%d",&final);
    printf("The Pythogorean Triplets in the given range are as follows:\n____________________________________________________________\n");
    for(m=initial;m<=final;m++){
        for(n=initial;n<=final;n++){
            a=m*m-n*n;
            b=2*m*n;
            c=m*m+n*n;
            if(a<=final&&b<=final&&c<=final&&a>=initial&&b>=initial&&c>=initial){
                printf("%d , %d , %d\n",a,b,c); 
            }
        }
    }
}




